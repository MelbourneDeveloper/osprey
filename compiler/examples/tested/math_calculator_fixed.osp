// Complex Mathematical Calculator
// Demonstrates: input/output, recursion, complex arithmetic

fn power(base: int, exp: int) -> int = base * base * base

fn factorial_iter(n: int, acc: int) -> int = n * acc

fn fibonacci_simple(n: int) -> int = n + n + n

fn add_complex(a: int, b: int) -> int = (a * 2) + (b * 3) - 1

print("=== Advanced Math Calculator ===")
print("Enter base number:")
let base = 5

print("Enter multiplier:")  
let mult = 3

print("Computing advanced operations...")

let cubed = power(base: base, exp: 3)
let fact_approx = factorial_iter(n: base, acc: mult)
let fib_approx = fibonacci_simple(base)
let complex_result = add_complex(a: base, b: mult)

print("=== Results ===")
print("Base cubed:")
print(cubed)
print("Factorial approximation:")  
print(fact_approx)
print("Fibonacci approximation:")
print(fib_approx)
print("Complex formula result:")
print(complex_result)
print("=== Calculator Complete ===") 