// Fine - simple variable with literal
let x = 42 

// Fine because return type was specified as int, and this we also know
// that the parameter must be an int
fn testGood(x) -> int = x

// Fine because return type is integer (inferred from literal)
fn getIntResult() = 42

// Fine because return type is string (inferred from literal)
fn getStringResult() = "asd"

// Fine because parameter type can be inferred from arithmetic usage
fn addOne(x) = x + 1

print("Basic test results:")
print("x = ${x}")
print("testGood(10) = ${testGood(10)}")
print("getIntResult() = ${getIntResult()}")
print("getStringResult() = ${getStringResult()}")
print("addOne(5) = ${addOne(5)}")