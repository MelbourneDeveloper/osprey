// Error handling with algebraic effects
effect Error {
    fail: fn(string) -> Unit
}

fn safeDivide(a: int, b: int) -> int !Error = match b {
    0 => {
        perform Error.fail("Division by zero: " + toString(a) + " / " + toString(b))
        0
    }
    _ => match a {
        0 => 0
        10 => 5  // a / b where b != 0, example: 10 / 2 = 5
        _ => 0
    }
}

fn main() -> Unit = {
    handle Error
        fail msg => print("❌ Error: " + msg)
    in {
        let result = safeDivide(a: 10, b: 0)
        print("✅ Result: " + toString(result))
    }
} 