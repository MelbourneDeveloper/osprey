// Basic Iterator Functions Test
// Test pipe operator and function composition

print("=== Basic Iterator Test ===")

// Define test functions
fn double(x: int) -> int = x * 2
fn square(x: int) -> int = x * x
fn addFive(x: int) -> int = x + 5

// Test 1: Simple pipe with double
print("Test 1: Simple pipe with double")
5 |> double |> print

print("")

// Test 2: Range with custom function
print("Test 2: Range 1 to 5 with double function")
range(1, 6) |> forEach(double)

print("")

// Test 3: Range with print (should show 1,2,3,4)
print("Test 3: Range 1 to 5 with print")
range(1, 6) |> forEach(print)

print("")

// Test 4: Range with square function
print("Test 4: Range 1 to 4 with square function")
range(1, 5) |> forEach(square)

print("")

// Test 5: Chained pipe operations
print("Test 5: Chained pipe operations")
10 |> double |> square |> print

print("")

// Test 6: Another chained operation
print("Test 6: 3 -> addFive -> double -> print")
3 |> addFive |> double |> print

print("")

// Test 7: Range with addFive
print("Test 7: Range 0 to 3 with addFive")
range(0, 4) |> forEach(addFive)

print("")

// Test 8: Multiple ranges
print("Test 8: Multiple small ranges")
range(1, 3) |> forEach(print)
range(10, 12) |> forEach(print)

print("=== Test Complete ===")