// Basic Field Access Test - Unconstrained Record Types
// This tests field access on record types without constraints

// Define simple record types with integer fields
type Point = { x: Int, y: Int }
type Rectangle = { width: Int, height: Int }

print("=== BASIC FIELD ACCESS TEST ===")

// Create record instances (unconstrained - should create actual structs)
let point = Point { x: 10, y: 20 }
let rectangle = Rectangle { width: 15, height: 8 }

print("Created point and rectangle instances")

// Test field access on Point
let pointX = point.x
let pointY = point.y
print("Point field access:\nPoint x: ${pointX}\nPoint y: ${pointY}")

// Test field access on Rectangle  
let rectWidth = rectangle.width
let rectHeight = rectangle.height
print("Rectangle field access:\nRectangle width: ${rectWidth}\nRectangle height: ${rectHeight}")

// Test field access in expressions
let coordinateSum = pointX + pointY
let area = rectWidth * rectHeight
print("Field access in expressions:\nPoint coordinates: (${pointX}, ${pointY})\nRectangle dimensions: ${rectWidth}x${rectHeight}\nSum of coordinates: ${coordinateSum}\nRectangle area: ${area}")

print("=== BASIC FIELD ACCESS TEST COMPLETE ===")