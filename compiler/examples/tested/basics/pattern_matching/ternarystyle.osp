// DO NOT CHANGE
// FIX THE COMPILER!!!

// a is declared as an unnamed record with a boolean field
let a = { a: true }
let b = a.a ? "true" : "false"
print(b)

let myResult = Success { value: "It worked" }
// This matches on type because Result is a built in type and you can
// use it like boolean for ternaries. And, value 
let message = myResult { value } ? value : "An unknown error occurred"
print(message)

let v = { value: "It worked" }
// This is a structural match. It doesn't care about the name of the type
// It just matches on the structure.
let message2 = v { value } ? value : "An unknown error occurred"
print(message2)
