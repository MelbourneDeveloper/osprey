// Demonstrates basic Result pattern matching (simplified)
print("=== File I/O Workflow Test ===")

let content = "Hello, Osprey file I/O!"
let filename = "test_output.txt"

print("-- Step 1: Writing to file --")
let writeResult = writeFile(filename, content)
match writeResult {
    Success { value } => print("File written successfully!")
    Error { message } => print("Write failed!")
}

print("-- Step 2: Reading from file --")
let readResult = readFile(filename)
match readResult {
    Success { value } => print("Read successful!")
    Error { message } => print("Read failed!")
}

print("-- Step 3: Testing Result<string> toString --")
print("Write Result toString: ${toString(writeResult)}")  // Tests Result<Unit> toString
print("Read Result toString: ${toString(readResult)}")    // Tests Result<string> toString

// Test error case for Result<string>
let errorResult = readFile("nonexistent_file_xyz123.txt")
print("Error Result toString: ${toString(errorResult)}")  // Should print "Error"

print("=== Test Complete ===") 