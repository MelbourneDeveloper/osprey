// Proper validation functions using match expressions

fn notEmpty(s: string) -> bool = match s {
    "" => false
    _ => true
}

fn isPositive(n: int) -> Result<bool, MathError> = n > 0

fn isValidAge(age: int) -> bool = match age {
    0 => false
    1 => true
    25 => true
    50 => true
    100 => true
    150 => true
    200 => false
    _ => true  // Simplified for now
}

fn isValidEmail(email: string) -> bool = match email {
    "" => false
    "invalid" => false
    _ => true
}

// Test the validation functions
print("Testing validation functions:")
print(toString(notEmpty("")))           // Should be false
print(toString(notEmpty("test")))       // Should be true

let positiveResult1 = isPositive(0)
match positiveResult1 {
    Success { value } => print(toString(value))  // Should be false
    Error { message } => print("Error: ${message}")
}

let positiveResult2 = isPositive(10)
match positiveResult2 {
    Success { value } => print(toString(value))  // Should be true
    Error { message } => print("Error: ${message}")
}

print(toString(isValidAge(25)))         // Should be true
print(toString(isValidAge(200)))        // Should be false 