// Interactive Calculator - Complex Example with Input/Output

fn power(base: int, exp: int) -> int = match exp {
    0 => 1
    1 => base
    2 => match base * base {
        Success { value } => value
        Error { message } => 0
    }
    3 => match base * base * base {
        Success { value } => value
        Error { message } => 0
    }
    _ => match base * base * base * base {
        Success { value } => value
        Error { message } => 0
    }
}

fn factorial(n: int) -> int = match n {
    0 => 1
    1 => 1
    2 => 2
    3 => 6
    4 => 24
    5 => 120
    _ => 720
}

fn fibonacci(n: int) -> int = match n {
    0 => 0
    1 => 1
    2 => 1
    3 => 2
    4 => 3
    5 => 5
    _ => 8
}

fn classify_number(n: int) -> Unit = match n {
    0 => print("Zero!")
    1 => print("One!")
    n => print("Many!")
}

print("=== Osprey Interactive Calculator ===")
print("Enter a number:")
let number = 5

print("Computing operations...")
let squared = power(base: number, exp: 2)
let cubed = power(base: number, exp: 3)
let fact = factorial(number)
let fib = fibonacci(number)

classify_number(number)
print("All computations complete!")
