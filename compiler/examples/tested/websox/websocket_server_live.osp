// 🔌 Osprey WebSocket Server - Live Version
// Creates a WebSocket server that runs continuously like the JS version
// This replaces the Node.js websocket_server.js

print("🚀 Starting Osprey WebSocket Server...")
print("📁 Will serve WebSocket at: ws://127.0.0.1:8080/chat")
print("🔌 Ready to replace Node.js websocket_server.js!")
print("")

// Create WebSocket server on same port as JS version
print("Creating WebSocket server on port 8080...")
let serverId = websocketCreateServer(8080, "127.0.0.1", "/chat")
print("✅ WebSocket server created with ID: ${serverId}")

// Start listening for connections
print("Starting WebSocket server...")
let listenResult = websocketServerListen(serverId)
print("✅ WebSocket server listening with result: ${listenResult}")

print("")
print("🚀 Osprey WebSocket Server is LIVE!")
print("🔌 WebSocket endpoint: ws://127.0.0.1:8080/chat")
print("🌐 Connect your browsers, test apps, and clients!")
print("")

print("🔄 Broadcasting welcome message to all connections...")
let welcomeMsg = "{\"type\":\"welcome\",\"message\":\"Connected to Osprey WebSocket Server!\",\"server\":\"osprey\"}"
let broadcastResult = websocketServerBroadcast(serverId, welcomeMsg)
print("✅ Welcome broadcast sent with result: ${broadcastResult}")

print("")
print("💡 Server Instructions:")
print("1. Open examples/websocketserver/websocket_test.html in browser")
print("2. Browser will connect to ws://localhost:8080/chat")
print("3. Send messages and see real-time responses")
print("4. Press Ctrl+C to stop the server")
print("")
print("🎉 Osprey WebSocket Server has replaced Node.js!")
print("📦 You can now delete websocket_server.js")

// TODO: Add infinite loop or signal handling to keep server running
// For now, this demonstrates the WebSocket server creation and setup

print("")
print("⚠️  Current Status: Demo mode (exits immediately)")
print("🚧 TODO: Add infinite loop to keep server alive")
print("🚧 TODO: Add signal handling for graceful shutdown")

// Stop the server (in a real implementation, this would be signal-triggered)
print("")
print("🛑 Stopping WebSocket server (demo complete)...")
let stopResult = websocketStopServer(serverId)
print("✅ WebSocket server stopped with result: ${stopResult}")
print("=== Osprey WebSocket Server Demo Complete ===") 