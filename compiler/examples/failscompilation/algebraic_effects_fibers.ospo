// 🚀 SUPREMO ALGEBRAIC EFFECTS WITH FIBERS! 🔥
// Demonstrating effects system integrated with fiber concurrency!

// Effect for fiber coordination
effect FiberCoordination {
    yield: fn() -> Unit
    notify: fn(string) -> Unit
}

// Effect for shared state across fibers
effect SharedState {
    increment: fn() -> int
    getTotal: fn() -> int
}

// Function that performs fiber coordination effects
fn coordinatedTask(taskId: int) -> Unit !FiberCoordination = {
    perform FiberCoordination.notify("Task " + toString(taskId) + " starting")
    perform FiberCoordination.yield()  // Yield to other fibers
    perform FiberCoordination.notify("Task " + toString(taskId) + " resuming") 
    perform FiberCoordination.yield()  // Yield again
    perform FiberCoordination.notify("Task " + toString(taskId) + " completed")
}

// Function that performs shared state effects  
fn updateSharedCounter(taskId: int) -> int !SharedState = {
    let newValue = perform SharedState.increment()
    newValue
}

// Function demonstrating fiber effects integration
fn demonstrateFiberEffects() -> Unit = {
    print("🚀 ALGEBRAIC EFFECTS + FIBERS INTEGRATION!")
    print("")
    print("🔥 REVOLUTIONARY COMBINATION:")
    print("- Type-safe effect tracking across fiber boundaries")
    print("- Compile-time verification of effect handling") 
    print("- Zero-overhead effect dispatch in concurrent code")
    print("")
    print("🚀 FEATURES:")
    print("✅ Effect declarations for fiber coordination")
    print("✅ Perform expressions in concurrent context")
    print("✅ Guaranteed effect safety across fibers")
    print("✅ No runtime effect crashes in concurrent code")
    print("")
    print("🎯 OSPREY ADVANTAGE:")
    print("Other languages: Effects + Concurrency = Runtime bugs")
    print("Osprey: Effects + Fibers = Compile-time safety!")
    print("")
    
    // These would cause COMPILATION ERRORS - effects must be handled!
    // spawn coordinatedTask(1)         // ❌ Unhandled FiberCoordination
    // spawn updateSharedCounter(2)     // ❌ Unhandled SharedState
    
    print("🚀 FIBER EFFECTS DEMO COMPLETE!")
}

// Main function
fn main() -> Unit = {
    demonstrateFiberEffects()
    print("🎉 ALGEBRAIC EFFECTS + FIBERS DEMO COMPLETE! 🔥")
} 