// 🚨 EFFECT NOT DECLARED IN SIGNATURE TEST - SHOULD FAIL COMPILATION! 🚨
// This proves the compiler validates that all effects used must be declared in function signatures

effect Logger {
    log: fn(string) -> Unit
    error: fn(string) -> Unit
}

effect Database {
    save: fn(string) -> Unit
    load: fn(string) -> string
}

// This function uses Logger effect but doesn't declare it in signature
fn sneakyFunction() -> Unit = {  // ❌ SHOULD FAIL: missing !Logger
    perform Logger.log("Trying to log without declaring Logger effect!")
    print("This should fail compilation")
}

// This function declares Logger but uses Database without declaring it
fn partialDeclaration() -> Unit !Logger = {  // ❌ SHOULD FAIL: missing !Database
    perform Logger.log("This is valid")
    perform Database.save("Trying to use Database without declaring it!")
}

fn main() -> Unit = {
    print("This should never run - compilation should fail!")
} 