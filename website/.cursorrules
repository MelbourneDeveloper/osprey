# Website Rules

## Golden Rules

----------CRITICAL--------------

**NEVER DUPLICATE CODE.** Edit code in place. Do not create new versions of the same code. Always edit directly without duplicating.

**AIM TO REDUCE THE NUMBER OF CSS CLASSES** Make sure you search for classes before creating new ones

**DELETE UNUSED CLASSES** Don't be scared to delete classes that aren't being used

--------------------------------

**KEEP ALL FILES UNDER 500 LOC.** Break large files into smaller, focused modules.

**BEFORE ADDING A PACKAGE,** always check documentation to find and install the latest version.

**NEVER COMMIT/PUSH CODE** unless explicitly asked.

**DO NOT COPY FILES. MOVE THEM.** Always use raw CLI commands to move files.

**ALWAYS PAY ATTENTION TO STATIC CODE ANALYSIS** rules and avoid breaking them. Use linters and validators.

**NO PLACEHOLDERS.** If you see existing placeholders, fix them or return an error.

**NEVER IGNORE TESTS** or reduce assertions to get a test passing. Fail loudly.

**NO SWEARING IN THE ACTUAL CODE.**

---

## CSS Organization (Most Important)

**CONSOLIDATE CSS** as much as possible - avoid duplication.

**DON'T DUPLICATE ELEMENTS** - create reusable CSS classes.

**DON'T NAME ELEMENTS AFTER THEIR SECTION** - name elements after what they are and reuse them often.

**DRY AF** - Don't Repeat Yourself in CSS.

**ORGANIZE BY ELEMENT TYPE** - NOT by page/section.

**AIM FOR MINIMAL CSS** - as little CSS as possible while achieving the design.

**USE CSS CUSTOM PROPERTIES** (variables) instead of hardcoded values.

**NO INLINE STYLES** - keep all styling in CSS files.

---

## Basic HTML Standards

**VALID HTML** - validate HTML markup and fix errors.

**MINIMAL MARKUP** - avoid unnecessary wrapper elements.

---

## JavaScript Basics

**DON'T DUPLICATE CODE** - especially constants and functions.

**USE CONSTANTS** instead of literals.

**PURE FUNCTIONS** wherever possible.

**ERROR HANDLING** - handle errors gracefully, don't let them crash the page.

---

## Eleventy Essentials

**BREAK INTO PARTIALS** - make reusable partials and always search for them before creating new ones

**CHECK OUTPUT** - routinely check what got outputted to see if it is what you expected

---

---

## SEO Essentials

**MEANINGFUL PAGE TITLES** - unique, descriptive titles for each page.

**META DESCRIPTIONS** - provide useful meta descriptions.

---

## File Organization

**LOGICAL FOLDER STRUCTURE** - organize assets by type and function.

**CONSISTENT NAMING** - use consistent file and folder naming conventions.

**SEPARATE CONCERNS** - keep HTML, CSS, and JS in appropriate files.

---

**Keep it simple and clean. Focus on CSS organization and basic web standards.**

**Prioritize achieving the task over following these rules if they conflict, but use these as guidelines for clean, maintainable, and performant web development.** 